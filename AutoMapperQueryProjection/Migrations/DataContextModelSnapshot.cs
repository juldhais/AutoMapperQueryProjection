// <auto-generated />
using System;
using AutoMapperQueryProjection.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoMapperQueryProjection.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("AutoMapperQueryProjection.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "INA",
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = 2,
                            Code = "JPN",
                            Name = "Japan"
                        });
                });

            modelBuilder.Entity("AutoMapperQueryProjection.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Job");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Programmer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ninja"
                        });
                });

            modelBuilder.Entity("AutoMapperQueryProjection.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("JobId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("JobId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            JobId = 1,
                            Name = "Juldhais Hengkyawan"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            JobId = 2,
                            Name = "Naruto Uzumaki"
                        });
                });

            modelBuilder.Entity("AutoMapperQueryProjection.Entities.Person", b =>
                {
                    b.HasOne("AutoMapperQueryProjection.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("AutoMapperQueryProjection.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId");

                    b.Navigation("Country");

                    b.Navigation("Job");
                });
#pragma warning restore 612, 618
        }
    }
}
